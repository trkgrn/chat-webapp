# Postgres
spring.jpa.hibernate.dialect =org.hibernate.dialect.PostgreSQLDialect 
spring.datasource.url=jdbc:postgresql://localhost:5432/Chat
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.username=user
spring.datasource.password=password123
spring.datasource.driverClassName=org.postgresql.Driver

# Redis
spring.cache.type=redis
spring.cache.host=localhost
spring.cache.port=6379

spring.mvc.pathmatch.matching-strategy = ant_path_matcher

# JWT expires

jwt.login.expire.hours=24
jwt.refresh.expire.hours=12


# Apache Kafka
## Consumer
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

## Producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

kafka.topic.name=notification

# Firebase Cloud Messaging
gcp.firebase.service-account=file:firebase-service-account.json
firebase.cloud-messaging.url=https://fcm.googleapis.com/fcm/send
firebase.cloud-messaging.server-key=AAAA0_hsO88:APA91bE0wVE5Oapyor6T4xirx4FchrTVB57lM5OLtl8EIHOzWAxXCgjvZ-vIkdhRRkx1m7zZF1cGNbjeuJMEC71Hsd9jW3LM9xvvQKuySqZlRTTQjX65NH6P4k3uOvNRP9wtOguzEnA9